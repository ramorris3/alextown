var app=angular.module("GameApp",[]);app.service("AssetService",["$http","LoaderService","MessageService",function($http,LoaderService,MessageService){function init(){$http.get("../api/assets").success(function(data){allAssets=data.allAssetData,LoaderService.assets=!0,LoaderService.loadHandler()}).error(function(data){console.log("ERROR"+JSON.stringify(data))})}var self=this,allAssets={};self.getAllAssets=function(){return allAssets},init(),self.getBullets=function(){return allAssets.Bullets},self.getEnemies=function(){return allAssets.Enemies},self.saveAsset=function(spriteData,imgSrc){return allAssets.hasOwnProperty(spriteData.name)?void MessageService.setFlashMessage('There is already an img asset named "'+spriteData.name+'."  Asset was not saved (must have a unique name).'):void $http.post("../api/save/img",{img:imgSrc,name:spriteData.name}).success(function(data){spriteData.key=data.key,spriteData.src=data.src,$http.post("../api/save/asset",spriteData).success(function(data){MessageService.setFlashMessage(data.message),allAssets=data.allAssetData}).error(function(data){MessageService.setFlashMessage(data.message,!0)})}).error(function(data){MessageService.setFlashMessage(data.message,!0)})},self.preloadAllAssets=function(game){for(var category in allAssets)if(allAssets.hasOwnProperty(category)){var assets=allAssets[category];for(var asset in assets)if(assets.hasOwnProperty(asset)){var obj=assets[asset];game.load.spritesheet(obj.key,obj.src,obj.width,obj.height)}}}}]),app.service("DamageService",function(){var self=this;self.takeDamage=function(sprite,damage){if(!sprite.invincible){if(sprite.health-=damage,sprite.health<=0){var deathSpr=sprite.game.deathAnimations.getFirstDead();deathSpr&&(deathSpr.revive(),deathSpr.checkWorldBounds=!0,deathSpr.outOfBoundsKill=!0,deathSpr.reset(sprite.x,sprite.y),deathSpr.body.velocity.x=-50,deathSpr.animations.play("die",10,!1,!0)),sprite.pendingDestroy=!0}sprite.invincible=!0,sprite.flashing=!0,sprite.game.time.events.add(50,function(){sprite.invincible=!1},sprite),sprite.game.time.events.add(500,function(){sprite.flashing=!1},sprite)}},self.flash=function(sprite){sprite.flashing?(sprite.flashTimer++,sprite.flashTimer%4===0?sprite.tint=8781824:sprite.tint=16777215):sprite.tint=16777215}}),app.service("EnemyService",["$http","$rootScope","DamageService","LoaderService","MessageService",function($http,$rootScope,DamageService,LoaderService,MessageService){function init(){$http.get("/api/enemies").success(function(data){allEnemies=data.allEnemyData,LoaderService.enemy=!0,LoaderService.loadHandler()}).error(function(data){MessageService.setFlashMessage(data.message,!0)})}var self=this,allEnemies={};self.getAllEnemies=function(){return allEnemies},self.getEnemy=function(key){return allEnemies[key]},init(),self.saveEnemy=function(enemyData,callback){if(allEnemies.hasOwnProperty(enemyData.name)){var overwrite=confirm('There is already an enemy named "'+enemyData.name+'."  Do you want to overwrite this enemy?');if(!overwrite)return void MessageService.setFlashMessage("Enemy was not saved.",!0)}$http.post("../api/save/enemies",enemyData).success(function(data){MessageService.setFlashMessage(data.message,!1),allEnemies=data.allEnemyData,callback&&callback()}).error(function(data){MessageService.setFlashMessage(data.message,!0)})},self.Enemy=function(game,x,y,data,playerSprite){this.game=game,this.data=data,Phaser.Sprite.call(this,this.game,x,y,data.spritesheet.key);var moveFrames=data.moveFrames.split(",");for(i=0;i<moveFrames.length;i++)moveFrames[i]=parseInt(moveFrames[i],10);var attackFrames=data.attackFrames.split(",");for(i=0;i<attackFrames.length;i++)attackFrames[i]=parseInt(attackFrames[i],10);if(this.animations.add("move",moveFrames,data.moveFps),this.animations.add("attack",attackFrames,data.attackFps),this.target=playerSprite,this.game.physics.enable(this,Phaser.Physics.ARCADE),this.anchor.setTo(.5,.5),this.health=data.health,this.damage=data.damage,this.moveSpeed=data.moveSpeed,this.invincible=!1,this.flashing=!1,this.flashTimer=0,this.movePattern=data.movePattern,this.attackPattern=data.attackPattern,"Charge"===this.attackPattern.key)this.getAttackStateInfo=this.getChargeStateInfo;else{if("Ranged"!==this.attackPattern.key)throw new Error("Attack-pattern key not recognized.");this.getAttackStateInfo=this.getRangedStateInfo}this.getAttackStateInfo().setup(),this.currentState=this.defaultState,this.game.add.existing(this)},self.Enemy.prototype=Object.create(Phaser.Sprite.prototype),self.Enemy.prototype.constructor=self.Enemy,self.Enemy.prototype.update=function(){DamageService.flash(this),this.currentState(),this.x<-this.width&&(this.pendingDestroy=!0)},self.Enemy.prototype.getChargeStateInfo=function(){var sprite=this;return{setup:function(){sprite.cooldown=sprite.attackPattern.cooldown,sprite.cooldownClock=0,sprite.chargeSpeed=sprite.attackPattern.chargeSpeed,sprite.chargeDuration=sprite.attackPattern.duration,sprite.chargeClock=0,sprite.chargeRange=sprite.attackPattern.range},startAttack:function(){sprite.cooldownClock&&sprite.cooldownClock--;var dist=sprite.game.math.distance(sprite.x,sprite.y,sprite.target.x,sprite.target.y);return dist<sprite.chargeRange&&!sprite.cooldownClock?(sprite.cooldownClock=sprite.cooldown,sprite.chargeClock=sprite.chargeDuration,sprite.chargeRotation=sprite.game.math.angleBetween(sprite.x,sprite.y,sprite.target.x,sprite.target.y),!0):!1},attackState:function(){sprite.chargeClock?(sprite.chargeClock--,sprite.animations.play("attack"),sprite.body.velocity.setTo(Math.cos(sprite.chargeRotation)*sprite.chargeSpeed,Math.sin(sprite.chargeRotation)*sprite.chargeSpeed),sprite.right>sprite.game.width&&(sprite.body.velocity.setTo(0,0),sprite.x=sprite.game.width-sprite.offsetX,sprite.chargeClock=0),sprite.bottom>sprite.game.height?(sprite.body.velocity.setTo(0,0),sprite.y=sprite.game.height-sprite.offsetY,sprite.chargeClock=0):sprite.top<0&&(sprite.body.velocity.setTo(0,0),sprite.y=sprite.offsetY,sprite.chargeClock=0)):sprite.currentState=sprite.defaultState}}},self.Enemy.prototype.getRangedStateInfo=function(){var sprite=this;return{setup:function(){sprite.cooldown=sprite.attackPattern.cooldown,sprite.cooldownClock=0,sprite.bullets=sprite.game.add.group(),sprite.bullets.createMultiple(30,sprite.attackPattern.bullet.key),sprite.bullets.setAll("anchor.x",.5),sprite.bullets.setAll("anchor.y",.5),sprite.bullets.setAll("outOfBoundsKill",!0),sprite.game.physics.enable(sprite.bullets,Phaser.Physics.ARCADE),sprite.game.allEnemyBullets.add(sprite.bullets),sprite.bulletSpeed=sprite.attackPattern.bulletSpeed,sprite.fireBullet=function(){sprite.cooldownClock=sprite.cooldown;var bullet=sprite.bullets.getFirstDead();bullet&&(bullet.revive(),bullet.checkWorldBounds=!0,bullet.outOfBoundsKill=!0,bullet.reset(sprite.x,sprite.y),bullet.body.velocity.x=-sprite.bulletSpeed)}},startAttack:function(){return sprite.cooldownClock?(sprite.cooldownClock--,!1):(sprite.fireBullet(),!0)},attackState:function(){sprite.move(),sprite.animations.play("attack"),sprite.animations.currentAnim.onComplete.add(function(){sprite.cooldownClock?sprite.currentState=sprite.defaultState:sprite.fireBullet()})}}},self.Enemy.prototype.defaultState=function(){this.move(),this.animations.play("move"),this.getAttackStateInfo().startAttack()&&(this.currentState=this.getAttackStateInfo().attackState)},self.Enemy.prototype.move=function(){if("Default"===this.movePattern)this.body.velocity.setTo(-this.moveSpeed,0);else{if("Follow"!==this.movePattern)throw new Error("Move-pattern key unrecognized");var distance=this.game.math.distance(this.x,this.y,this.target.x,this.target.y);if(150>distance||this.x>this.target.x){var rotation=this.game.math.angleBetween(this.x,this.y,this.target.x,this.target.y);distance<this.moveSpeed?this.body.velocity.setTo(Math.cos(rotation)*distance,Math.sin(rotation)*distance):this.body.velocity.setTo(Math.cos(rotation)*this.moveSpeed,Math.sin(rotation)*this.moveSpeed)}else this.body.velocity.setTo(-this.moveSpeed,0)}}}]),app.service("LevelService",["$http","LoaderService","MessageService",function($http,LoaderService,MessageService){function init(){$http.get("../api/stages").success(function(data){currentLevel=data.levelData.data,LoaderService.level=!0,LoaderService.loadHandler()}).error(function(data){MessageService.setFlashMessage(data.message,!0)})}var currentLevel,self=this;self.getCurrentLevel=function(){return currentLevel},init(),self.saveLevel=function(filename,level,data){$http.post("../api/save/stage",{filename:filename,level:level,data:data}).success(function(data){MessageService.setFlashMessage(data.message,!1)}).error(function(data){MessageService.setFlashMessage(data.message,!0)})}}]),app.service("LoaderService",function(){function loaded(){return self.assets&&self.enemy&&self.level&&self.player}var self=this;self.assets=!1,self.enemy=!1,self.level=!1,self.player=!1;var loaderFunctions=[];self.addLoaderFunction=function(callback){loaded()?callback():loaderFunctions.push(callback)},self.loadHandler=function(){if(loaded())for(var i=0;i<loaderFunctions.length;i++)loaderFunctions[i]()}}),app.service("MessageService",["$rootScope",function($rootScope){var self=this,colors={RED:"#E8130C",GREEN:"#00B20B"},flashMessage={visible:!1,message:"",color:colors.GREEN};self.setFlashMessage=function(message,isBad){flashMessage.message=message,flashMessage.color=colors.GREEN,isBad&&(flashMessage.color=colors.RED,message||(flashMessage.message="An unknown error occured.")),flashMessage.visible=!0,setTimeout(function(){$rootScope.$apply(function(){self.hideFlashMessage()})},3e3)},self.getFlashMessage=function(){return flashMessage},self.hideFlashMessage=function(){flashMessage.visible=!1}}]),app.service("PlayerService",["$http","DamageService","LoaderService",function($http,DamageService,LoaderService){function init(){$http.get("/api/players").success(function(data){allPlayers=data.allPlayerData,LoaderService.player=!0,LoaderService.loadHandler()}).error(function(data){MessageService.setFlashMessage(data.message,!0)})}var self=this,allPlayers={};self.getAllPlayers=function(){return allPlayers},self.getPlayer=function(key){return allPlayers[key]},init(),self.Player=function(game,x,y,data){this.game=game,Phaser.Sprite.call(this,this.game,x,y,data.spritesheet.key),this.animations.add("move",data.moveFrames,data.moveFps),this.animations.add("attack",data.attackFrames,data.attackFps),this.animations.add("damage",data.damageFrames,data.damageFps),this.game.physics.enable(this,Phaser.Physics.ARCADE),this.body.collideWorldBounds=!0,this.anchor.setTo(.5,.5),this.body.drag.setTo(1450,1450),this.invincible=!1,this.flashing=!1,this.flashTimer=0,this.health=data.health,this.damage=data.damage,this.maxSpeed=data.moveSpeed,this.diagSpeed=this.maxSpeed/Math.sqrt(2),this.acceleration=1500,this.attackPattern=data.attackPattern,this.cooldown=this.attackPattern.cooldown,this.cooldownClock=0,"Ranged"===this.attackPattern.key&&(this.bullets=this.game.add.group(),this.bullets.createMultiple(30,this.attackPattern.bullet.key),this.bullets.setAll("anchor.x",.5),this.bullets.setAll("anchor.y",.5),this.bullets.setAll("outOfBoundsKill",!0),this.game.physics.enable(this.bullets,Phaser.Physics.ARCADE),this.game.allPlayerBullets.add(this.bullets),this.bulletSpeed=this.attackPattern.bulletSpeed),this.currentState=this.defaultState,this.cursors=this.game.input.keyboard.createCursorKeys(),this.game.input.keyboard.addKeyCapture([Phaser.Keyboard.SPACEBAR]),this.game.add.existing(this)},self.Player.prototype=Object.create(Phaser.Sprite.prototype),self.Player.prototype.constructor=self.Player,self.Player.prototype.update=function(){DamageService.flash(this),this.cooldownClock>0&&this.cooldownClock--,this.currentState()},self.Player.prototype.move=function(){(this.cursors.left.isDown||this.cursors.right.isDown)&&(this.cursors.up.isDown||this.cursors.down.isDown)?this.body.maxVelocity.setTo(this.diagSpeed,this.diagSpeed):this.body.maxVelocity.setTo(this.maxSpeed,this.maxSpeed),this.cursors.left.isDown?this.body.acceleration.x=-this.acceleration:this.cursors.right.isDown?this.body.acceleration.x=this.acceleration:this.body.acceleration.x=0,this.cursors.up.isDown?this.body.acceleration.y=-this.acceleration:this.cursors.down.isDown?this.body.acceleration.y=this.acceleration:this.body.acceleration.y=0},self.Player.prototype.isAttacking=function(){return this.game.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)},self.Player.prototype.defaultState=function(){this.move(),this.animations.play("move"),this.isAttacking()&&(this.currentState=this.attackState)},self.Player.prototype.attackState=function(){if(this.move(),"Ranged"!==this.attackPattern.key)throw new Error("Attack-pattern key not recognized in PlayerService.js");if(!this.cooldownClock){this.cooldownClock=this.cooldown;var bullet=this.bullets.getFirstDead();bullet&&(bullet.revive(),bullet.checkWorldBounds=!0,bullet.outOfBoundsKill=!0,bullet.reset(this.x,this.y),bullet.body.velocity.x=this.bulletSpeed)}this.animations.play("attack");var sprite=this;this.animations.currentAnim.onComplete.add(function(){sprite.isAttacking()?sprite.currentState=sprite.attackState:sprite.currentState=sprite.defaultState},sprite.game)}}]),app.controller("GameController",["AssetService","DamageService","EnemyService","LevelService","LoaderService","PlayerService",function(AssetService,DamageService,EnemyService,LevelService,LoaderService,PlayerService){LoaderService.addLoaderFunction(function(){function preload(){game.load.image("floor","assets/floor.png"),game.load.spritesheet("death","../api/uploads/explode.png",50,50),AssetService.preloadAllAssets(game)}function create(){tiles=game.add.tileSprite(0,0,game.width,game.height,"floor"),tiles.autoScroll(scrollSpeed,0),game.deathAnimations=game.add.group();for(var i=0;10>i;i++){var deathSpr=game.add.sprite(0,0,"death");deathSpr.animations.add("die"),deathSpr.anchor.setTo(.5,.5),deathSpr.kill(),game.deathAnimations.add(deathSpr)}game.physics.enable(game.deathAnimations,Phaser.Physics.ARCADE),game.allPlayerBullets=game.add.group();var playerData=PlayerService.getPlayer("stairfex");player=new PlayerService.Player(game,50,game.world.centerY,playerData),game.allEnemyBullets=game.add.group(),enemyGroup=game.add.group()}function update(){enemyTimer++,enemyTimer%120===0&&spawnEnemy();var i,subgroup;for(i=0;i<game.allPlayerBullets.children.length;i++)subgroup=game.allPlayerBullets.children[i],game.physics.arcade.overlap(enemyGroup,subgroup,hitCharacterHandler,hitCharacterProcess);for(i=0;i<game.allEnemyBullets.children.length;i++)subgroup=game.allEnemyBullets.children[i],game.physics.arcade.overlap(player,subgroup,hitCharacterHandler,hitCharacterProcess);game.physics.arcade.overlap(player,enemyGroup,hitPlayerHandler,hitCharacterProcess),game.physics.arcade.collide(enemyGroup)}function spawnEnemy(){for(var col=levelData[levelCol],i=0;i<col.length;i++){var enemyData=EnemyService.getEnemy(col[i]);if(enemyData){var enemy=new EnemyService.Enemy(game,game.width,0,enemyData,player);enemy.y=50*i+enemy.height/2,enemyGroup.add(enemy)}}levelCol++}var tiles,player,enemyGroup,game=new Phaser.Game(1e3,500,Phaser.CANVAS,"phaser-frame",{preload:preload,create:create,update:update}),scrollSpeed=-75,enemyTimer=0,levelData=LevelService.getCurrentLevel(),levelCol=0,hitCharacterProcess=function(character){return!character.invincible},hitCharacterHandler=function(character,bullet){bullet.kill(),DamageService.takeDamage(character,1)},hitPlayerHandler=function(character){DamageService.takeDamage(character,1)}})}]);